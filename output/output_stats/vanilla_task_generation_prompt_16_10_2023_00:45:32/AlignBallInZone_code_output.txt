import numpy as np
import os
import pybullet as p
import random
from cliport.tasks import primitives
from cliport.tasks.grippers import Spatula
from cliport.tasks.task import Task
from cliport.utils import utils
import numpy as np
from cliport.tasks.task import Task
from cliport.utils import utils

class AlignBallInZone(Task):
    """Pick up a blue ball and place it in the center of a marked zone, ensuring that it stays within the boundaries despite potential rolling."""

    def __init__(self):
        super().__init__()
        self.max_steps = 10
        self.lang_template = "place the blue ball in the center of the marked zone"
        self.task_completed_desc = "done aligning ball in zone."
        self.additional_reset()

    def reset(self, env):
        super().reset(env)

        # Add zone.
        zone_size = (0.12, 0.12, 0)
        zone_pose = self.get_random_pose(env, zone_size)
        env.add_object('zone/zone.urdf', zone_pose, 'fixed')

        # Add ball.
        ball_size = (0.04, 0.04, 0.04)
        ball_urdf = 'ball/ball-template.urdf'
        ball_pose = self.get_random_pose(env, ball_size)
        ball_id = env.add_object(ball_urdf, ball_pose, color=utils.COLORS['blue'])

        # Goal: ball is in the center of the zone.
        self.add_goal(objs=[ball_id], matches=np.ones((1, 1)), targ_poses=[zone_pose], replace=False,
                rotations=False, metric='pose', params=None, step_max_reward=1, language_goal=self.lang_template)